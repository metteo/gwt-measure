--- Implemented ---
+ GWT 2.1.1 support
+ Apache 2.0 License
+ integration with GWT lightweight measurements
+ gwt event handler on client for easy plugins
+ measurements of RPC Callbacks
+ support custom event attributes (fragment, size, bytes, method, sessionId)
+ slf4j on server
+ handle browser close and navigate to different url
+ pluggable server implementations
+ measurements groups support
+ measuring static resource download
+ client/server network events
+ disabling/enabling of features
+ measurements of HTTP RequestsBuilder
+ timing messages in json format

--- In Progress ---
# uid injection with filter or remote servlet
# event aggregation

--- This Version ---
# exception reporting
# callback failure identification
# support RunAsync measurements (fragment, size - attributes are new)
# retry sequence of measurement delivery, exponential backoff period
# configurable measurement transport (direct rpc, servlet, rpc piggyback, servlet piggyback, custom)
# logging mechanism (div, firebug, chrome, etc. see gwt-log example)
# nested custom measurements
# gwt jdk logging on client
# honor HTTP header limitations
# mention gwt-debug-panel in documentation
# user defined attributes
# write documentation
# publish to maven repo
# ensure extensibility

--- Next Versions ---
# split client and server distributions
# compare with https://github.com/yahoo/boomerang/
# compare with http://stevesouders.com/episodes/
# Perf4J integration
# offline storage of incidents on client until browser is connected
# exception diagnostics and categorization
# measurements of Timers
# measurements of EntryPoints
# measurements of ClientBundle ExternalResources
# measurements of RequestFactory
# native js measurement support (somehow)
# async message storage on server not to stall the production
# browser type and version recognition
# Browser Web Timing API usage (IE9, Chrome, FFox)

----- Future -----
# use HTML5 browser storage and cookies on older browsers
# aspect-like measurement proxy generation on client
# Google App Engine integration
# ip geomapping
# sample reporting over embedded database
# google chart api for reporting
# JMX reporting and configuration support
# reporting tooling integration
# GWT 2.2 support
# Migrate to Java 1.6 and use SPI feature